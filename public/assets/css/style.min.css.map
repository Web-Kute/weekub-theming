{"version":3,"file":"../css/style.min.css","mappings":"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","sources":["webpack://weekub-theming/./templates/scss/functions.scss","webpack://weekub-theming/./templates/scss/reset.scss","webpack://weekub-theming/./templates/scss/fonts.scss","webpack://weekub-theming/./templates/scss/global.scss","webpack://weekub-theming/./templates/scss/mixin.scss","webpack://weekub-theming/./templates/scss/theme-dark.scss"],"sourcesContent":["@use 'colors';\n\n$themes: (\n  theme-light: theme-light,\n  theme-dark: theme-dark,\n);\n\n@function setStyle($map, $object, $style) {\n  @if map-has-key($map, $object) {\n    @return map-get(map-get($map, $object), $style);\n  }\n  @warn \"The key Â´#{$object} is not present in the map...\";\n  @return null;\n}\n\n$config: (\n  theme-light: (\n    backgroundColor:\n      map-get(\n        $map: colors.$colors,\n        $key: 'white',\n      ),\n    colorText:\n      map-get(\n        $map: colors.$colors,\n        $key: 'wet-asphalt',\n      ),\n  ),\n  theme-dark: (\n    backgroundColor:\n      map-get(\n        $map: colors.$colors,\n        $key: 'black-pearl',\n      ),\n    colorText:\n      map-get(\n        $map: colors.$colors,\n        $key: 'white',\n      ),\n  ),\n);\n\n@each $key, $value in $themes {\n  @if (map-has-key($config, $key)) {\n    .#{$value} {\n      background-color: setStyle($config, $key, backgroundColor);\n      color: setStyle($config, $key, colorText);\n    }\n  }\n  // @warn 'No config found for theme: #{$value}' if not map-has-key($config, $key);\n}\n","/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","@font-face {\n  font-family: \"Roboto Slab Regular\";\n  src:\n    local(\"Roboto Slab\"),\n    url(\"../fonts/roboto-slab/RobotoSlab-Regular.ttf\") format(\"truetype\");\n  font-optical-sizing: auto;\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: \"Roboto Slab bold\";\n  src:\n    local(\"Roboto Slab\"),\n    url(\"../fonts/roboto-slab/RobotoSlab-Bold.ttf\") format(\"truetype\");\n  font-optical-sizing: auto;\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: \"Roboto Regular\";\n  src:\n    local(\"Roboto\"),\n    local(\"Droid Sans\"),\n    url(\"../fonts/roboto/Roboto-Regular.woff\") format(\"woff\");\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: \"Roboto Light\";\n  src:\n    local(\"Roboto Light\"),\n    local(\"Droid Sans\"),\n    url(\"../fonts/roboto/Roboto-Light.woff\") format(\"woff\");\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: \"Roboto Medium\";\n  src:\n    local(\"Roboto Medium\"),\n    local(\"Droid Sans\"),\n    url(\"../fonts/roboto/Roboto-Medium.ttf\") format(\"truetype\");\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: \"Roboto Bold\";\n  src:\n    local(\"Roboto Bold\"),\n    local(\"Droid Sans\"),\n    url(\"../fonts/roboto/Roboto-Bold.ttf\") format(\"truetype\");\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n}\n","@use 'colors';\n@use 'mixin';\n@use 'functions';\n\nhtml {\n  scroll-behavior: smooth;\n  font-size: 16px;\n}\n\nbody {\n  font-family: 'Roboto', 'Droid Sans', 'Heveltica', Arial;\n  @include mixin.map-colors('color', 'wet-asphalt');\n  transition: background-color 500ms ease-out;\n}\n\n* {\n  box-sizing: border-box;\n}\n\na {\n  @include mixin.map-colors('color', 'midnight-blue');\n  transition: color 200ms ease;\n  text-decoration: none;\n  &:hover {\n    @include mixin.map-colors('color', 'logocolor');\n  }\n  &:active {\n    @include mixin.map-colors('color', 'carrot');\n  }\n}\n\na:focus-visible,\nbutton:focus-visible {\n  outline: 2px dotted currentColor;\n  outline-offset: 3px;\n}\n\np {\n  line-height: 25px;\n}\n\nbutton {\n  appearance: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  border: none;\n  background-color: transparent;\n  outline: 0;\n  padding: 0;\n  cursor: pointer;\n}\n\nblockquote {\n  margin: 0.5rem 0;\n}\n\nh1,\nh2 {\n  font-family: 'Roboto Light', 'Droid Sans', 'Heveltica', Arial;\n  @include mixin.map-colors('color', 'belize-hole');\n}\n\nh1 {\n  font-size: 1.9rem;\n  line-height: 35px;\n  text-transform: uppercase;\n  &:nth-child(1) {\n    margin-top: 6px;\n  }\n  &:nth-child(2) {\n    margin-top: 1rem;\n    letter-spacing: 2px;\n    color: currentColor;\n  }\n}\n\nh2 {\n  font-size: 2rem;\n}\n\nh3 {\n  font-size: 1.05rem;\n  font-family: 'Roboto Medium', 'Droid Sans', 'Heveltica', Arial;\n  text-transform: uppercase;\n  @include mixin.map-colors('color', 'belize-hole');\n  margin-bottom: 0.5rem;\n}\n\nheader {\n  position: relative;\n  display: grid;\n  grid-template-columns: 5% 90% 5%;\n  margin: 0 auto;\n  padding-bottom: 20px;\n  // border-bottom: 1px solid map-get($map: colors.$colors, $key: 'silver');\n  nav {\n    justify-self: start;\n    margin-top: 20px;\n    margin-left: 20px;\n  }\n  .nav-open {\n    .togglemenu__bar {\n      @include mixin.map-colors('background-color', 'white');\n      &:nth-child(1) {\n        @include mixin.crossBurger(45deg);\n      }\n      &:nth-child(2) {\n        display: none;\n      }\n      &:nth-child(3) {\n        @include mixin.crossBurger(-45deg);\n      }\n    }\n    &.togglemenu {\n      &:hover {\n        transform-origin: center;\n        transform: rotate(45deg);\n      }\n    }\n  }\n  .logo {\n    display: flex;\n    column-gap: 1.5rem;\n    align-items: center;\n    justify-self: center;\n    position: fixed;\n    z-index: 9;\n    background: linear-gradient(\n      180deg,\n      rgba(255, 255, 255, 1) 0%,\n      rgba(255, 255, 255, 0.9) 80%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    padding-top: 20px;\n    padding-bottom: 20px;\n    width: 100%;\n    justify-content: center;\n    @include mixin.mobile-only() {\n      position: relative;\n      flex-direction: column;\n    }\n  }\n  h2 {\n    font-size: 1.8rem;\n    letter-spacing: -1.2px;\n    color: currentColor;\n  }\n  figure {\n    &:hover {\n      animation: pulse 1000ms;\n    }\n  }\n  figcaption {\n    @include mixin.map-colors('color', 'logocolor');\n    text-align: center;\n    letter-spacing: 1px;\n  }\n  @include mixin.mobile-only() {\n    flex-direction: column;\n    align-items: flex-start;\n    margin-top: 10px;\n  }\n}\n\n.togglemenu {\n  position: fixed;\n  z-index: 30;\n  width: 35px;\n  height: 35px;\n  cursor: pointer;\n  transition-duration: 300ms;\n  @include mixin.mobile-only() {\n    width: 25px;\n    left: 10px;\n    top: 15px;\n  }\n  &__bar {\n    display: block;\n    width: 35px;\n    height: 5px;\n    margin-top: 4px;\n    border-radius: 10px;\n    @include mixin.map-colors('background-color', 'black-pearl');\n    transition: transform 300ms ease;\n    &:nth-child(2) {\n      height: 3px;\n    }\n    @include mixin.mobile-only() {\n      width: 25px;\n    }\n  }\n}\nmain {\n  width: 80%;\n  margin-top: 50px;\n  @include mixin.margin-auto;\n  @include mixin.mobile-only() {\n    width: 97%;\n    margin-left: 1rem;\n  }\n  @include mixin.mobile-landscape() {\n    width: 95%;\n    margin-left: 3rem;\n  }\n  @include mixin.tablet-portrait-only() {\n    width: 88%;\n  }\n  @include mixin.tablet-landscape-only() {\n    width: 88%;\n  }\n  @include mixin.desktop-only() {\n    width: 88%;\n  }\n}\n\n.burgermenu {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 300px;\n  height: 100vh;\n  z-index: 20;\n  padding: 5rem 10px;\n  border-top: 5px solid map-get($map: colors.$colors, $key: 'belize-hole');\n  @include mixin.map-colors('background-color', 'black-pearl');\n  transform: translateX(-300px);\n  transition: opacity 500ms ease;\n  &__item {\n    font-family: 'Roboto Light', 'Droid Sans', 'Heveltica', Arial;\n    font-size: 1.6rem;\n    text-transform: uppercase;\n    line-height: 35px;\n    &.active {\n      @include mixin.map-colors('color', 'logocolor');\n    }\n  }\n  li {\n    margin-left: 5px;\n  }\n\n  a {\n    text-decoration: none;\n    @include mixin.map-colors('color', 'white');\n    &:hover {\n      @include mixin.map-colors('color', 'logocolor');\n    }\n  }\n}\n\n// Hack because header is fixed, we need to modify the offset of anchors\n#skills,\n#about,\n#contact,\n#customers {\n  @include mixin.tablet-portrait-up() {\n    &::before {\n      display: block;\n      content: ' ';\n      margin-top: -90px;\n      height: 200px;\n      visibility: hidden;\n      pointer-events: none;\n    }\n  }\n}\n\n#skills-container {\n  .grid-sizer,\n  .skills {\n    width: 18%;\n    @include mixin.mobile-only() {\n      width: 100%;\n    }\n    @include mixin.mobile-landscape() {\n      width: 45%;\n    }\n    @include mixin.tablet-landscape-only() {\n      width: 31%;\n    }\n    @include mixin.desktop-only() {\n      width: 23%;\n    }\n  }\n  .skills {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: auto;\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n    background-color: rgba(\n      map-get($map: colors.$colors, $key: 'belize-hole'),\n      0.1\n    );\n    a {\n      border-bottom: 1px dashed\n        map-get($map: colors.$colors, $key: 'belize-hole');\n    }\n  }\n  li {\n    width: 85%;\n    line-height: 20px;\n  }\n}\n\n.skills {\n  &__header {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .icons {\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    row-gap: 1px;\n    right: 10px;\n    top: 10px;\n  }\n  ul {\n    @include mixin.mobile-only() {\n      font-size: 14px;\n    }\n  }\n  &__star {\n    text-align: right;\n    margin-top: 10px;\n  }\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  padding: 20px;\n  @include mixin.mobile-only() {\n    padding: 12px 30px 20px 30px;\n  }\n  h2 {\n    font-family: 'Roboto Regular', 'Droid Sans', 'Heveltica', Arial;\n    margin-bottom: 1rem;\n    font-size: clamp(2.2rem, 1.9605rem + 0.6397vw, 3rem);\n    text-transform: capitalize;\n  }\n\n  .about__content {\n    h3 {\n      margin-bottom: 0;\n      text-transform: inherit;\n    }\n    a {\n      border-bottom: 1px dashed\n        map-get($map: colors.$colors, $key: 'belize-hole');\n    }\n    p {\n      font-size: 1.1rem;\n    }\n    ul > li {\n      line-height: 25px;\n      list-style-type: square;\n      @include mixin.map-colors('color', 'logocolor');\n      margin-left: 2rem;\n      span {\n        @include mixin.map-colors('color', 'wet-asphalt');\n      }\n    }\n  }\n  svg {\n    width: 2em;\n    height: 2em;\n    fill: currentColor;\n    overflow: visible;\n    vertical-align: middle;\n    &.opquast {\n      width: 5em;\n    }\n  }\n}\n\n.customers__content {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n\n  // display: grid;\n  // grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));\n  // gap: 20px;\n\n  @include mixin.mobile-only() {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto;\n  }\n\n  @include mixin.tablet-portrait-only() {\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: auto;\n  }\n\n  @include mixin.tablet-landscape-only() {\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: auto;\n  }\n\n  @include mixin.desktop-only() {\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: auto;\n  }\n\n  a span {\n    border-bottom: 1px dashed map-get($map: colors.$colors, $key: 'belize-hole');\n  }\n}\n\n.customers {\n  &__item {\n    position: relative;\n    max-width: 300px;\n    width: 100%;\n    height: 169px;\n    border: 1px solid map-get($map: colors.$colors, $key: 'silver');\n    overflow: hidden;\n\n    figure {\n      position: relative;\n      figcaption {\n        position: absolute;\n        width: 100%;\n        top: 140px;\n        padding: 5px 0;\n        opacity: 0.9;\n        text-align: center;\n        font-size: 1rem;\n        text-transform: uppercase;\n        @include mixin.map-colors('color', 'belize-hole');\n        @include mixin.map-colors('background-color', 'white');\n      }\n      img {\n        width: 100%;\n        object-fit: cover;\n        object-position: 0;\n      }\n    }\n    &:hover .customers__description {\n      transform: translateY(0);\n    }\n    &:nth-child(7) {\n      h3 {\n        font-size: 15px;\n        letter-spacing: -0.5px;\n      }\n    }\n  }\n  &__description {\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    font-size: 1rem;\n    width: 300px;\n    height: 169px;\n    padding: 10px;\n    z-index: 8;\n    top: 0;\n    @include mixin.map-colors('background-color', 'white');\n    transform: translateY(100%);\n    transition: transform 500ms ease;\n    ul {\n      @include mixin.mobile-landscape-down() {\n        font-size: 14px;\n      }\n    }\n    p {\n      line-height: 18px;\n    }\n    svg {\n      width: 1.2rem;\n    }\n  }\n}\n\n#contact {\n  background-image: url('../images/contact.webp');\n  background-repeat: no-repeat;\n  background-size: cover;\n  margin-bottom: 3rem;\n  @include mixin.tablet-landscape-down() {\n    background-image: url('../images/contact1200.webp');\n    background-position: center;\n  }\n}\n.contact {\n  padding-bottom: 60vh;\n  @include mixin.mobile-only() {\n    padding-bottom: 50vh;\n  }\n  svg {\n    margin-right: 0.5rem;\n  }\n  span a {\n    border-bottom: 1px dashed map-get($map: colors.$colors, $key: 'belize-hole');\n  }\n  &__grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(48%, 1fr));\n    grid-template-rows: 1fr;\n    gap: 30px;\n    .contact__name {\n      font-size: 1.3rem;\n      margin-bottom: 0;\n      text-transform: capitalize;\n    }\n    address {\n      margin: 20px 0;\n    }\n    &__col {\n      &:nth-child(2) {\n        p {\n          line-height: 40px;\n        }\n      }\n      .phone-icon {\n        transform: rotate(100deg);\n        fill: map-get($map: colors.$colors, $key: 'belize-hole');\n      }\n    }\n  }\n  &__item {\n    p {\n      line-height: 1;\n    }\n  }\n  &__subtitle {\n    font-weight: 100;\n    font-style: italic;\n  }\n  a.contact__link {\n    text-decoration: none;\n    span span {\n      border-bottom: 1px dashed\n        map-get($map: colors.$colors, $key: 'belize-hole');\n    }\n  }\n}\n\n.cta {\n  display: flex;\n  align-items: center;\n  @include mixin.mobile-only() {\n    flex-direction: column;\n    margin-top: 1rem;\n    margin-left: 0;\n  }\n  a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 210px;\n    max-width: 220px;\n    @include mixin.mobile-only() {\n      margin-left: 0;\n    }\n    padding: 0.2rem 1rem;\n    margin-left: 1rem;\n    @include mixin.map-colors('color', 'white');\n    @include mixin.map-colors('background-color', 'logocolor');\n    text-align: center;\n    font-size: 1.1rem;\n    line-height: 25px;\n    font-family: 'Roboto Medium', 'Droid Sans', 'Heveltica', Arial;\n    border-radius: 6px;\n    text-decoration: none;\n    transition: background-color 200ms ease-in-out;\n    text-transform: uppercase;\n    &:hover {\n      @include mixin.map-colors('background-color', 'belize-hole');\n    }\n  }\n  svg {\n    transform: rotate(100deg) scale(0.7);\n    margin-right: 0.3rem;\n    fill: map-get($map: colors.$colors, $key: 'white');\n  }\n}\n\n.btn {\n  display: flex;\n  align-items: center;\n  margin-top: 0.5rem;\n  @include mixin.mobile-only() {\n    margin-left: 0;\n  }\n  a {\n    display: flex;\n    align-items: center;\n    @include mixin.mobile-only() {\n      margin-left: 0;\n    }\n    font-family: 'Roboto Medium', 'Droid Sans', 'Heveltica', Arial;\n    color: map-get($map: colors.$colors, $key: 'white');\n    padding: 0.2rem 0.8rem 0.2rem 0.2rem;\n    text-align: center;\n    line-height: 25px;\n    border-radius: 6px;\n    text-decoration: none;\n    @include mixin.map-colors('background-color', 'logocolor');\n    transition: background-color 200ms ease-in-out;\n    &:hover {\n      @include mixin.map-colors('background-color', 'belize-hole');\n    }\n  }\n  svg {\n    transform: scale(0.7);\n    margin-right: 0;\n    fill: map-get($map: colors.$colors, $key: 'white');\n  }\n}\n\nfooter {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 10rem;\n  line-height: 30px;\n  @include mixin.map-colors('color', 'asbestos');\n  .arrow-up {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-transform: uppercase;\n    cursor: pointer;\n    span {\n      margin-right: 0.5rem;\n    }\n    &:hover {\n      @include mixin.map-colors('color', 'belize-hole');\n    }\n    &:hover svg {\n      fill: map-get($map: colors.$colors, $key: 'belize-hole');\n    }\n  }\n  svg {\n    width: 2em;\n    height: 1.5em;\n    transform: scale(1.5);\n    &:hover {\n      fill: map-get($map: colors.$colors, $key: 'belize-hole');\n    }\n  }\n}\n\n#theme-toggle {\n  position: fixed;\n  z-index: 20;\n  height: 24px;\n  right: 20px;\n  top: 20px;\n  @include mixin.mobile-only() {\n    position: relative;\n    right: 35px;\n    top: 10px;\n  }\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 46px;\n  height: 20px;\n  cursor: pointer;\n  &__title {\n    display: inline-block;\n    position: relative;\n    top: 8px;\n    font-size: 11px;\n    text-align: center;\n    line-height: 10px;\n  }\n  &__slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    @include mixin.map-colors('background-color', 'belize-hole');\n    transition: 400ms;\n    &:before {\n      position: absolute;\n      content: '';\n      height: 20px;\n      width: 20px;\n      left: 0;\n      bottom: 0;\n      @include mixin.map-colors('background-color', 'white');\n      transition: 200ms;\n    }\n    &.round {\n      border-radius: 34px;\n      &:before {\n        border-radius: 50%;\n      }\n    }\n  }\n  /* Hide default HTML checkbox */\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n}\n\ninput:checked + .switch__slider {\n  @include mixin.map-colors('background-color', 'peter-river');\n}\n\ninput:focus + .switch__slider {\n  box-shadow: 0 0 1px map-get($map: colors.$colors, $key: 'peter-river');\n}\n\ninput:checked + .switch__slider:before {\n  transform: translateX(26px);\n}\n\n.show {\n  visibility: visible;\n  opacity: 1;\n}\n\n.hide {\n  visibility: hidden;\n  opacity: 0;\n}\n\n.hidden {\n  display: none;\n}\n\n.in {\n  animation: slide-in 400ms ease-out;\n  transform: translateX(0);\n}\n\n.out {\n  animation: slide-out 200ms ease-in;\n  transform: translateX(-300px);\n}\n\n.error404 {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 2rem;\n  width: 90%;\n  @include mixin.margin-auto;\n  text-align: center;\n}\n\n@keyframes pulse {\n  from {\n    transform: scale3d(1, 1, 1);\n  }\n\n  50% {\n    transform: scale3d(1.05, 1.05, 1.05);\n  }\n\n  to {\n    transform: scale3d(1, 1, 1);\n  }\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(-300px);\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n\n@keyframes slide-out {\n  from {\n    transform: translateX(0);\n  }\n  to {\n    transform: translateX(-300px);\n  }\n}\n","@use 'breakpoints';\n@use 'functions';\n@use 'colors';\n\n@mixin mobile-only {\n  @media (max-width: map-get(breakpoints.$breakpoints, 'mobile-only')) {\n    @content;\n  }\n}\n\n@mixin mobile-landscape-down {\n  @media (max-width: map-get(breakpoints.$breakpoints, 'mobile-landscape-down')) {\n    @content;\n  }\n}\n\n@mixin mobile-landscape {\n  @media (min-width: map-get(breakpoints.$breakpoints, 'tablet-portrait-up')) and (max-width: map-get(breakpoints.$breakpoints, 'tablet-portrait-down')) {\n    @content;\n  }\n}\n\n@mixin tablet-portrait-down {\n  @media (max-width: map-get(breakpoints.$breakpoints, 'tablet-portrait-down')) {\n    @content;\n  }\n}\n\n@mixin tablet-portrait-up {\n  @media (min-width: map-get(breakpoints.$breakpoints, 'tablet-portrait-up')) {\n    @content;\n  }\n}\n\n@mixin tablet-portrait-only {\n  @media (min-width: map-get(breakpoints.$breakpoints, 'tablet-portrait-up')) and (max-width: map-get(breakpoints.$breakpoints, 'tablet-portrait-down')) {\n    @content;\n  }\n}\n\n@mixin tablet-landscape-up {\n  @media (max-width: map-get(breakpoints.$breakpoints, 'tablet-landscape-up')) {\n    @content;\n  }\n}\n\n@mixin tablet-landscape-down {\n  @media (max-width: map-get(breakpoints.$breakpoints, 'tablet-landscape-down')) {\n    @content;\n  }\n}\n\n@mixin tablet-landscape-only {\n  @media (min-width: map-get(breakpoints.$breakpoints, 'tablet-landscape-up')) and (max-width: map-get(breakpoints.$breakpoints, 'tablet-landscape-down')) {\n    @content;\n  }\n}\n\n@mixin desktop-up {\n  @media (min-width: map-get(breakpoints.$breakpoints, 'desktop-up')) {\n    @content;\n  }\n}\n\n@mixin desktop-down {\n  @media (max-width: map-get(breakpoints.$breakpoints, 'desktop-down')) {\n    @content;\n  }\n}\n\n@mixin desktop-only {\n  @media (min-width: map-get(breakpoints.$breakpoints, 'desktop-up')) and (max-width: map-get(breakpoints.$breakpoints, 'desktop-down')) {\n    @content;\n  }\n}\n\n@mixin orientation-landscape {\n  @media screen and (orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin big-desktop-up {\n  @media (min-width: map-get(breakpoints.$breakpoints, 'big-desktop-up')) {\n    @content;\n  }\n}\n\n@mixin retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin crossBurger($deg) {\n  position: absolute;\n  transform: rotate($deg);\n  top: 15px;\n}\n\n@mixin margin-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n@mixin map-colors($property, $keycolor) {\n  @if (map-has-key(colors.$colors, $keycolor)) {\n    #{$property}: map-get(colors.$colors, $keycolor);\n  }\n  // @warn \"Unknown color key`#{$keycolor}` in $colors.\";\n}\n","@use 'colors';\n@use 'mixin';\n\n.theme-dark {\n  footer {\n    @include mixin.map-colors('color', 'silver');\n    a {\n      &.arrow-up {\n        @include mixin.map-colors('color', 'white');\n        transition: color 200ms ease;\n        &:hover {\n          @include mixin.map-colors('color', 'logocolor');\n        }\n      }\n    }\n  }\n  a {\n    &.contact__link {\n      @include mixin.map-colors('color', 'white');\n      transition: color 200ms ease;\n      &:hover {\n        color: map-get($map: colors.$colors, $key: 'logocolor');\n      }\n    }\n  }\n  .burgermenu {\n    @include mixin.map-colors('background-color', 'white');\n    border-top: 5px solid map-get($map: colors.$colors, $key: 'carrot');\n    &__item {\n      &.active {\n        @include mixin.map-colors('color', 'logocolor');\n      }\n    }\n    a {\n      @include mixin.map-colors('color', 'belize-hole');\n      &:hover {\n        @include mixin.map-colors('color', 'logocolor');\n      }\n    }\n  }\n  .nav-open {\n    .togglemenu__bar {\n      @include mixin.map-colors('background-color', 'black-pearl');\n    }\n  }\n\n  .togglemenu__bar {\n    @include mixin.map-colors('background-color', 'white');\n  }\n\n  header {\n    .logo {\n      background: linear-gradient(\n        180deg,\n        rgba(30, 39, 46, 1) 0%,\n        rgba(30, 39, 46, 0.9) 90%,\n        rgba(30, 39, 46, 0.5) 100%\n      );\n    }\n  }\n\n  .about__content {\n    ul > li span {\n      @include mixin.map-colors('color', 'white');\n    }\n    svg {\n      @include mixin.map-colors('color', 'white');\n    }\n  }\n\n  h1 {\n    @include mixin.map-colors('color', 'white');\n  }\n\n  h2 {\n    @include mixin.map-colors('color', 'white');\n  }\n\n  header h2 {\n    @include mixin.map-colors('color', 'carrot');\n  }\n\n  h3 {\n    @include mixin.map-colors('color', 'carrot');\n    &.contact__name {\n      @include mixin.map-colors('color', 'white');\n    }\n  }\n\n  #skills-container .skills {\n    @include mixin.map-colors('background-color', 'clouds');\n    &__star {\n      @include mixin.map-colors('color', 'belize-hole');\n    }\n    ul,\n    p {\n      @include mixin.map-colors('color', 'black-pearl');\n    }\n  }\n\n  .customers__description {\n    @include mixin.map-colors('color', 'wet-asphalt');\n  }\n\n  #contact {\n    background-image: none;\n  }\n}\n"],"names":[],"sourceRoot":""}